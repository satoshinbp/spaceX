{"ast":null,"code":"var _jsxFileName = \"/Users/shinya/dashlabs/apollo-client-tutorial/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from '@apollo/client'; // const client = new ApolloClient({\n//   uri: 'https://48p1r2roz4.sse.codesandbox.io',\n//   cache: new InMemoryCache(),\n// });\n// client\n//   .query({\n//     query: gql`\n//       query GetRates {\n//         rates(currency: \"USD\") {\n//           currency\n//         }\n//       }\n//     `,\n//   })\n//   .then((result) => console.log(result));\n// const EXCHANGE_RATES = gql`\n//   query GetExchangeRates {\n//     rates(currency: \"USD\") {\n//       currency\n//       rate\n//     }\n//   }\n// `;\n// const ExchangeRates = () => {\n//   const { loading, error, data } = useQuery(EXCHANGE_RATES);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//   return data.rates.map(({ currency, rate }) => (\n//     <div key={currency}>\n//       <p>\n//         {currency}: {rate}\n//       </p>\n//     </div>\n//   ));\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://api.thedogapi.com/v1/breeds',\n  cache: new InMemoryCache()\n});\nconst GET_DOGS = gql`\n  query GetDogs {\n    dogs {\n      id\n      name\n    }\n  }\n`;\n\nfunction Dogs({\n  onDogSelected\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DOGS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"dog\",\n    onChange: onDogSelected,\n    children: data.dogs.map(dog => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: dog.breed,\n      children: dog.breed\n    }, dog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dogs, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Dogs;\nconst GET_DOG_PHOTO = gql`\n  query Dog($breed: String!) {\n    dog(breed: $breed) {\n      id\n      displayImage\n    }\n  }\n`;\n\nfunction DogPhoto({\n  breed\n}) {\n  _s2();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DOG_PHOTO, {\n    variables: {\n      breed\n    }\n  });\n  if (loading) return null;\n  if (error) return `Error! ${error}`;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: data.dog.displayImage,\n    style: {\n      height: 100,\n      width: 100\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DogPhoto, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = DogPhoto;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dogs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DogPhoto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Dogs\");\n$RefreshReg$(_c2, \"DogPhoto\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/shinya/dashlabs/apollo-client-tutorial/src/App.js"],"names":["ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","GET_DOGS","Dogs","onDogSelected","loading","error","data","message","dogs","map","dog","breed","id","GET_DOG_PHOTO","DogPhoto","variables","displayImage","height","width","App"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,SACEA,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP,C,CAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,qCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMO,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASK,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAiC;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACK,QAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACE;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,QAAQ,EAAEJ,aAA7B;AAAA,cACGG,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeC,GAAD,iBACb;AAAqB,MAAA,KAAK,EAAEA,GAAG,CAACC,KAAhC;AAAA,gBACGD,GAAG,CAACC;AADP,OAAaD,GAAG,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQV,I;UAC0BN,Q;;;KAD1BM,I;AAiBT,MAAMW,aAAa,GAAGhB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASiB,QAAT,CAAkB;AAAEH,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AAC3B,QAAM;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACiB,aAAD,EAAgB;AACvDE,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAD4C,GAAhB,CAAzC;AAIA,MAAIP,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAEX,sBACE;AAAK,IAAA,GAAG,EAAEC,IAAI,CAACI,GAAL,CAASM,YAAnB;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;IAXQJ,Q;UAC0BlB,Q;;;MAD1BkB,Q;;AAaT,SAASK,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAErB,MAAxB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQqB,G;AAUT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from '@apollo/client';\n\n// const client = new ApolloClient({\n//   uri: 'https://48p1r2roz4.sse.codesandbox.io',\n//   cache: new InMemoryCache(),\n// });\n\n// client\n//   .query({\n//     query: gql`\n//       query GetRates {\n//         rates(currency: \"USD\") {\n//           currency\n//         }\n//       }\n//     `,\n//   })\n//   .then((result) => console.log(result));\n\n// const EXCHANGE_RATES = gql`\n//   query GetExchangeRates {\n//     rates(currency: \"USD\") {\n//       currency\n//       rate\n//     }\n//   }\n// `;\n\n// const ExchangeRates = () => {\n//   const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n\n//   return data.rates.map(({ currency, rate }) => (\n//     <div key={currency}>\n//       <p>\n//         {currency}: {rate}\n//       </p>\n//     </div>\n//   ));\n// };\n\nconst client = new ApolloClient({\n  uri: 'https://api.thedogapi.com/v1/breeds',\n  cache: new InMemoryCache(),\n});\n\nconst GET_DOGS = gql`\n  query GetDogs {\n    dogs {\n      id\n      name\n    }\n  }\n`;\n\nfunction Dogs({ onDogSelected }) {\n  const { loading, error, data } = useQuery(GET_DOGS);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <select name=\"dog\" onChange={onDogSelected}>\n      {data.dogs.map((dog) => (\n        <option key={dog.id} value={dog.breed}>\n          {dog.breed}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nconst GET_DOG_PHOTO = gql`\n  query Dog($breed: String!) {\n    dog(breed: $breed) {\n      id\n      displayImage\n    }\n  }\n`;\n\nfunction DogPhoto({ breed }) {\n  const { loading, error, data } = useQuery(GET_DOG_PHOTO, {\n    variables: { breed },\n  });\n\n  if (loading) return null;\n  if (error) return `Error! ${error}`;\n\n  return (\n    <img src={data.dog.displayImage} style={{ height: 100, width: 100 }} />\n  );\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <h2>My first Apollo app ðŸš€</h2>\n      <Dogs />\n      <DogPhoto />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}