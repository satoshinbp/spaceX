{"ast":null,"code":"var _jsxFileName = \"/Users/shinya/dashlabs/apollo-client-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://pokeapi.co/api/v2/pokemon/ditto',\n  cache: new InMemoryCache()\n});\nconst GET_FILMS = gql`\n  query GetCountries {\n    films {\n      title\n      director\n      people {\n        name\n      }\n    }\n  }\n`;\n\nfunction Films({\n  onDogSelected\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_FILMS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"film\",\n    onChange: onDogSelected,\n    children: data.films.map(film => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: film.name,\n      children: film.name\n    }, film.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Films, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Films;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Films, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Films\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/shinya/dashlabs/apollo-client-tutorial/src/App.js"],"names":["ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","GET_FILMS","Films","onDogSelected","loading","error","data","message","films","map","film","name","App"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SACEA,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;;AAQA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,yCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMO,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,SAASK,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAkC;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACK,SAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEJ,aAA9B;AAAA,cACGG,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBACd;AAAwB,MAAA,KAAK,EAAEA,IAAI,CAACC,IAApC;AAAA,gBACGD,IAAI,CAACC;AADR,OAAaD,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQT,K;UAC0BN,Q;;;KAD1BM,K;;AAiBT,SAASU,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEd,MAAxB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQc,G;AAST,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://pokeapi.co/api/v2/pokemon/ditto',\n  cache: new InMemoryCache(),\n});\n\nconst GET_FILMS = gql`\n  query GetCountries {\n    films {\n      title\n      director\n      people {\n        name\n      }\n    }\n  }\n`;\n\nfunction Films({ onDogSelected }) {\n  const { loading, error, data } = useQuery(GET_FILMS);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <select name=\"film\" onChange={onDogSelected}>\n      {data.films.map((film) => (\n        <option key={film.name} value={film.name}>\n          {film.name}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <h2>My first Apollo app ðŸš€</h2>\n      <Films />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}