{"ast":null,"code":"var _jsxFileName = \"/Users/shinya/dashlabs/apollo-client-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokemon2.vercel.app/',\n  cache: new InMemoryCache()\n});\nconst GET_POKEMONS = gql`\n  query pokemons($first: Int!) {\n    pokemons(first: $first) {\n      id\n      name\n      image\n      maxHP\n      maxCP\n      attacks {\n        special {\n          name\n          damage\n        }\n      }\n    }\n  }\n`;\n\nfunction Pokemons({\n  onDogSelected\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POKEMONS, {\n    variables: {\n      first: 150\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n      value: pokemon.name,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokemon.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemon.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, pokemon.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pokemons;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pokemons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pokemons\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/shinya/dashlabs/apollo-client-tutorial/src/App.js"],"names":["ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","GET_POKEMONS","Pokemons","onDogSelected","loading","error","data","variables","first","message","pokemons","map","pokemon","name","image","App"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SACEA,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;;AAQA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,sCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMO,YAAY,GAAGJ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,SAASK,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAqC;AAAA;;AACnC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACK,YAAD,EAAe;AACtDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAD2C,GAAf,CAAzC;AAIA,MAAIJ,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACI,OAAQ,EAA/B;AAEX,sBACE;AAAA,cACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAmBC,OAAD,iBACjB;AAAwB,MAAA,KAAK,EAAEA,OAAO,CAACC,IAAvC;AAAA,8BACE;AAAA,kBAAKD,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,KAAlB;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIF,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUF,OAAO,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnBQX,Q;UAC0BN,Q;;;KAD1BM,Q;;AAqBT,SAASa,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEjB,MAAxB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQiB,G;AAST,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokemon2.vercel.app/',\n  cache: new InMemoryCache(),\n});\n\nconst GET_POKEMONS = gql`\n  query pokemons($first: Int!) {\n    pokemons(first: $first) {\n      id\n      name\n      image\n      maxHP\n      maxCP\n      attacks {\n        special {\n          name\n          damage\n        }\n      }\n    }\n  }\n`;\n\nfunction Pokemons({ onDogSelected }) {\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\n    variables: { first: 150 },\n  });\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      {data.pokemons.map((pokemon) => (\n        <div key={pokemon.name} value={pokemon.name}>\n          <h2>{pokemon.name}</h2>\n          <img src={pokemon.image} alt=\"\" />\n          <p>{pokemon.image}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <h2>My first Apollo app ðŸš€</h2>\n      <Pokemons />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}